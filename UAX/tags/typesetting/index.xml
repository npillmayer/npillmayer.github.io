<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Typesetting on ⋮Seg⋮ment⋮ing⋮ ⋮Uni⋮code⋮</title>
    <link>http://npillmayer.github.io/UAX/tags/typesetting/</link>
    <description>Recent content in Typesetting on ⋮Seg⋮ment⋮ing⋮ ⋮Uni⋮code⋮</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Norbert Pillmayer</copyright>
    <lastBuildDate>Sat, 20 Nov 2021 20:18:00 +0100</lastBuildDate>
    
        <atom:link href="http://npillmayer.github.io/UAX/tags/typesetting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>⋮What⋮ ⋮is⋮ ⋮a⋮ ⋮Type⋮set⋮ting⋮-⋮Stack⋮?</title>
      <link>http://npillmayer.github.io/UAX/2021/typesetting-stack/</link>
      <pubDate>Sat, 20 Nov 2021 20:18:00 +0100</pubDate>
      
      <guid>http://npillmayer.github.io/UAX/2021/typesetting-stack/</guid>
      <description>The other day I had reason to think about what actually comprises a typesetting stack. Typesetting allows the documents you compiled to be read on a output medium. For this post I&amp;rsquo;ll focus on screen-output.
Other have tried to give a systematic overview of what typesetting is. Nevertheless, I&amp;rsquo;ll jot down my own attempt, focussing on UAX, i.e. the Unicode recommendations and algorithms for various aspects of text segmentation.
A Walk through the Layout Process It&amp;rsquo;s clear that the rules of various Unicode annexes play an important role during typsetting.</description>
    </item>
    
  </channel>
</rss>
